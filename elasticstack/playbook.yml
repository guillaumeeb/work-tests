---
- name: Install Docker
  hosts: all
  become: true

  tasks:
  - name: yum utils for docker
    yum: name=yum-utils state=present

  - name: Add docker repo
    command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

  - name: Make yum cache
    command: yum makecache fast

  - name: Install Docker-ce
    yum: name=docker-ce state=present

  - name: Set syctl max_map_count for elasticsearch
    sysctl:
      name: vm.max_map_count
      value: 262144
      state: present

# il faut modifier le service avec les options pour elk et faire un syctl reload
  - name: Position docker ulimits for running elasticsearch on Swarm
    lineinfile:
      destfile: /lib/systemd/system/docker.service
      line: 'ExecStart=/usr/bin/dockerd --default-ulimit memlock=-1:-1 --default-ulimit nofile=65536:65536'
      regexp: '^ExecStart=/usr/bin/dockerd'

# On redémarre docker en rechargeant le service pour prendre en compte les options
  - name: Retart docker
    systemd: state=restarted name=docker daemon_reload=yes

# Pas sur que docker compose soit utile ici...
  - name: Install docker compose
    get_url:
      url: https://github.com/docker/compose/releases/download/1.12.0-rc2/docker-compose-Linux-x86_64
      dest: /usr/bin/docker-compose
      mode: 0755

- name: Init Swarm master and get worker token
  hosts: node1
  become: true
  vars:
    manager_ip: 192.168.77.21

  tasks:
  - name: test if swarm already init
    shell: >
      docker info | grep "Swarm: active"
    register: swarm_active
    ignore_errors: True

  - name: Init swarm master
    command: docker swarm init --advertise-addr={{ manager_ip }}:2377
    when: swarm_active|failed

  - name: retrieve swarm worker token
    shell: docker swarm join-token -q worker
    register: swarm_worker_token

- name: Join Worker nodes swarm
  hosts: node2,node3
  become: true
  vars:
    manager_ip: 192.168.77.21
    token: "{{ hostvars['node1']['swarm_worker_token']['stdout'] }}"

  tasks:
  - name: test if swarm already init
    shell: >
      docker info | grep "Swarm: active"
    register: swarm_active
    ignore_errors: True
  
  - name: join worker nodes to cluster
    command: docker swarm join
        --token={{ token }}
        {{ manager_ip }}:2377
    when: swarm_active|failed

- name: Install beats for ELK tests
  hosts: node1,node2
  become: true
  tasks:
  - name: Download filebeat
    get_url:
      url: https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.3.0-x86_64.rpm
      dest: /tmp/filebeat-5.3.0-x86_64.rpm
      mode: 0550

  - name: Install filebeat
    yum:
      name: /tmp/filebeat-5.3.0-x86_64.rpm
      state: present

  - name: configure filebeat
    copy:
      src: filebeat/filebeat.yml
      dest: /etc/filebeat/filebeat.yml
      mode: 0644
##Start filebeat manually if needed

  - name: Download metricbeat
    get_url:
      url: https://artifacts.elastic.co/downloads/beats/metricbeat/metricbeat-5.3.0-x86_64.rpm
      dest: /tmp/metricbeat-5.3.0-x86_64.rpm
      mode: 0550

  - name: Install metricbeat-5.3.0-x86_64.rpm
    yum:
      name: /tmp/metricbeat-5.3.0-x86_64.rpm
      state: present

  - name: configure metricbeat-5.3.0-x86_64.rpm
    copy:
      src: metricbeat/metricbeat.yml
      dest: /etc/metricbeat/metricbeat.yml
      mode: 0644

  # Charger les template metricbeat manuellement qd ES est démarré
  # Trover un container qui exécute elasticsearch
  # sudo docker cp /etc/metricbeat/metricbeat.template.json f58970b29b39:/tmp
# sudo docker exec f58970b29b39 curl --user elastic:changeme -XPUT 'http://escluster:9200/_template/metricbeat' -d@/tmp/metricbeat.template.json

# Start beats only if ELK services have been created
- name: Start beats for ELK tests
  #hosts: nonodes
  hosts: node1,node2
  become: true
  tasks:

  - name: Start filebeat
    systemd: state=restarted name=filebeat

  - name: Start metricbeat
    systemd: state=restarted name=metricbeat